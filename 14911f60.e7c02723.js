(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return g}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),p=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,g=u["".concat(l,".").concat(b)]||u[b]||d[b]||a;return n?o.a.createElement(g,s(s({ref:t},c),{},{components:n})):o.a.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=b;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(113)),l={title:"Persist Translations",description:"Plugins - Persist Translations | Transloco Angular i18n"},s={unversionedId:"plugins/persist",id:"plugins/persist",isDocsHomePage:!1,title:"Persist Translations",description:"Plugins - Persist Translations | Transloco Angular i18n",source:"@site/docs/plugins/persist.mdx",slug:"/plugins/persist",permalink:"/transloco/docs/plugins/persist",editUrl:"https://github.com/ngneat/transloco/edit/master/docs/docs/plugins/persist.mdx",version:"current",sidebar:"docs",previous:{title:"Message Format",permalink:"/transloco/docs/plugins/message-format"},next:{title:"Preload Languages",permalink:"/transloco/docs/plugins/preload"}},i=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Clear Storage",id:"clear-storage",children:[]}],c={rightToc:i};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This plugin provides the functionality of persisting translations to the provided storage."),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm install @ngneat/transloco-persist-translations\n")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"Import the ",Object(a.b)("inlineCode",{parentName:"p"},"TranslocoPersistTranslationsModule")," module into the ",Object(a.b)("inlineCode",{parentName:"p"},"TranslocoRootModule"),", and provide the storage you would like to use:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="transloco-root.module.ts"',title:'"transloco-root.module.ts"'}),"import {\n  TranslocoPersistTranslationsModule,\n  PERSIST_TRANSLATIONS_STORAGE\n} from '@ngneat/transloco-persist-translations';\n\n@NgModule({\n  imports: [\n      TranslocoPersistTranslationsModule.init({\n        loader: TranslocoHttpLoader, ====> Auto generated via ng add\n        storage: {\n          provide: PERSIST_TRANSLATIONS_STORAGE,\n          useValue: localStorage\n        }\n      })\n  ],\n  ...\n})\nexport class TranslocoRootModule {}\n")),Object(a.b)("p",null,"Note that you should ",Object(a.b)("strong",{parentName:"p"},"not")," include the default loader to make it work."),Object(a.b)("p",null,"You can also use an async storage. For example, let's install ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/localForage/localForage"}),"localForage")," and use ",Object(a.b)("inlineCode",{parentName:"p"},"IndexedDB"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="transloco-root.module.ts"',title:'"transloco-root.module.ts"'}),"import {\n  TranslocoPersistTranslationsModule,\n  PERSIST_TRANSLATIONS_STORAGE\n} from '@ngneat/transloco-persist-translations';\nimport * as localForage from 'localforage';\n\nlocalForage.config({\n  driver: localForage.INDEXEDDB,\n  name: 'Transloco',\n  storeName: 'translations'\n});\n\n@NgModule({\n  imports: [\n    TranslocoPersistTranslationsModule.init({\n      loader: TranslocoHttpLoader,\n      storage: {\n        provide: PERSIST_TRANSLATIONS_STORAGE,\n        useValue: localForage\n      }\n    })\n  ],\n  ...\n})\nexport class TranslocoRootModule {}\n")),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TranslocoPersistTranslationsModule")," can also receive the following configuration:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'{\n  "ttl": 86400,\n  "storageKey": "yourKey"\n}\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ttl"),": How long the cache should live in seconds."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"storageKey"),": The key to be used to save the translations data.")),Object(a.b)("h2",{id:"clear-storage"},"Clear Storage"),Object(a.b)("p",null,"The storage cleanup is done automatically once the ",Object(a.b)("inlineCode",{parentName:"p"},"ttl")," is passed, but it could also can be done manually by calling ",Object(a.b)("inlineCode",{parentName:"p"},"clearCache")," method from the cache service:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="app.component.ts"',title:'"app.component.ts"'}),"import { TranslocoPersistTranslations } from '@ngneat/transloco-persist-translations';\n\nexport class AppComponent {\n  constructor(private loader: TranslocoPersistTranslations) {}\n\n  clearTranslationsCache() {\n    this.loader.clearCache();\n  }\n}\n")))}p.isMDXComponent=!0}}]);