(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{113:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return d}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),p=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},f=function(e){var n=p(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(t),m=r,d=f["".concat(i,".").concat(m)]||f[m]||u[m]||a;return t?o.a.createElement(d,l(l({ref:n},s),{},{components:t})):o.a.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},79:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(3),o=t(7),a=(t(0),t(113)),i={title:"Using xliff",description:"Recipe - Using xliff | Transloco Angular i18n"},l={unversionedId:"recipes/xliff",id:"recipes/xliff",isDocsHomePage:!1,title:"Using xliff",description:"Recipe - Using xliff | Transloco Angular i18n",source:"@site/docs/recipes/xliff.mdx",slug:"/recipes/xliff",permalink:"/transloco/docs/recipes/xliff",editUrl:"https://github.com/ngneat/transloco/edit/master/docs/docs/recipes/xliff.mdx",version:"current",sidebar:"docs",previous:{title:"Prefetch the User Language",permalink:"/transloco/docs/recipes/prefetch"},next:{title:"Generate Locale Files using Google Translate",permalink:"/transloco/docs/recipes/generateLocaleFileUsingGoogleTranslate"}},c=[],s={rightToc:c};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Install the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.npmjs.com/package/xliff"}),Object(a.b)("inlineCode",{parentName:"a"},"xliff"))," package:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm i xliff\nyarn add xliff\n")),Object(a.b)("p",null,"Replace the default http loader with the following loader implementation:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="transloco-root.module.ts"',title:'"transloco-root.module.ts"'}),"import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { from } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n// xliff v1.2\nimport xliff from \"xliff/esm/xliff12ToJs\";\n// xliff v2\n//import xliff from \"xliff/esm/xliff2js\";\n\nfunction toTranslationFormat(json) {\n  const obj = json.resources.transloco;\n  return Object.keys(obj).reduce((acc, key) => {\n    acc[key] = obj[key].target;\n    return acc;\n  }, {});\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoXliffHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.xlf`, { responseType: 'text' })\n      .pipe(\n        switchMap((translation) => from(xliff(translation))), \n        map(toTranslationFormat)\n      );\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'es'],\n        defaultLang: 'en',\n        // Remove this option if your application\n        // doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoXliffHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n")),Object(a.b)("p",null,"The translation file (xliff v1.2):"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0" encoding="UTF-8" ?>\n<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">\n  <file source-language="en" datatype="plaintext" original="transloco">\n    <body>\n      <trans-unit id="title">\n        <source>Hello Transloco!</source>\n        <target>Bonjour Transloco!</target>\n      </trans-unit>\n    </body>\n  </file>\n</xliff>\n')))}p.isMDXComponent=!0}}]);